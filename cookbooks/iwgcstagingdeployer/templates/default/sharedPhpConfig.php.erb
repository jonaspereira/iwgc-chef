<?php
/** This File is managed by Chef, all changes will be overriden once the Chef configure action takes place, to perf
orm permanent  changes to this file please make it on the Chef Repositorie */




/**
 * Config shared amongst all environments and on console
 * Configure any writable CWebApplicaiton properties here,
 * any properties that do not exist on CConsoleApplication need
 * to be unset in shared_console.php
 */
// uncomment the following to define a path alias
// use pathAliases.php for all aliases, they will not work here
// Yii::setPathOfAlias('local','path/to/local-folder');
return array(
    // application id, this value is also used to autogenerage unique cache keys
    'id' => 'iwgc',
    // the root directory of the application, defaults to 'protected'
    'basePath' => dirname(__FILE__) . DIRECTORY_SEPARATOR . '..',
    // application name
    'name' => 'iWantGreatCare',
    'defaultController' => 'home',
    // The default view layout. Override this in your module (or individual controller) for more granular view control
    'layout' => '//layouts/responsive-header-footer',
    // the IDs of the application components that should be preloaded
    'preload' => array(
        'log',
        'autologin',
    ),
    // a controller which should handle all user requests
    'catchAllRequest' => file_exists(dirname(__FILE__) . '/../../maintenance') ? array('home/maintenance') : null,
    'controllerMap' => [
        'brandedmedicines' => 'BrandedmedicinesController',
        'clinics' => 'ClinicsController',
        'dentalsurgeries' => 'DentalsurgeriesController',
        'dentists' => 'DentistsController',
        'diaverum' => 'DiaverumController',
        'doctors' => 'DoctorsController',
        'genericmedicines' => 'GenericmedicinesController',
        'gpsurgeries' => 'GpsurgeriesController',
        'hospices' => 'HospicesController',
        'hospitals' => 'HospitalsController',
        'hospitalwards' => 'HospitalwardsController',
        'medicines' => 'MedicinesController',
        'nurses' => 'NursesController',
        'nursinghomes' => 'NursinghomesController',
        'opticians' => 'OpticiansController',
        'optometrists' => 'OptometristsController',
        'palliativecare' => 'PalliativecareController',
        'pharmacies' => 'PharmaciesController',
        'pharmacists' => 'PharmacistsController',
        'physiotherapists' => 'PhysiotherapistsController',
        'services' => 'ServicesController',
        'sites' => 'SitesController',
        'supertrusts' => 'SupertrustsController',
        'treatments' => 'TreatmentsController',
        'trusts' => 'TrustsController',
        'wheelchairservices' => 'WheelchairservicesController',
    ],
    // autoloading model and component classes
    'import' => array(
        'application.controllers.*',
        'application.controllers.entity.*',
        /**
         * Models
         */
        'application.models.*',
        'application.models.data.*',
        'application.models.data.ar.*',
        'application.models.data.ar.Entity.*',
        'application.models.data.ar.Question.*',
        'application.models.data.ar.Question.Lookup.*',
        'application.models.data.ar.recordSet.*',
        'application.models.data.solr.*',
        'application.models.data.solr.document.*',
        'application.models.data.solr.resultSet.*',
        'application.models.form.*',
        'application.models.data.dynselect.*',
        'application.models.data.xml.*',
        /**
         * Components
         */
        'application.components.*',
        'application.components.behavior.*',
        'application.components.controllers.*',
        'application.components.debug.*',
        'application.components.filters.*',
        'application.components.journal.*',
        'application.components.helpers.*',
        'application.components.interfaces.*',
        'application.components.moderate.*',
        'application.components.module.*',
        'application.components.overrides.*',
        'application.components.ruby.*',
        'application.components.traits.*',
        'application.components.url.*',
        'application.components.validators.*',
        'application.components.warmup.*',
        'application.components.widgets.*',
        'application.components.widgets.iwexternalwidget.*',
        'application.components.widgets.helpers.*',
        'application.components.widgets.adapters.*',
        /**
         * Extensions
         */
        'ext.ApplicationEmail.*',
        'ext.ApplicationEmail.DataTemplates.*',
        'ext.Confirmation.*',
        'ext.Location.*',
        'ext.Organisations.*',
        'ext.Translation.*',
        'ext.starRating.*',
        'ext.eoauth.*',
        'ext.eoauth.lib.*',
        'ext.lightopenid.*',
        'ext.eauth.*',
        'ext.eauth.services.*',
        /**
         * Support for unit tests
         */
        'system.test.*',
        'application.tests.components.*',
        'application.tests.fixtures.*',
    ),
    'modules' => array(
        // enable this after testing admin module for use on production

        'admin' => array(
            'class' => '\admin\AdminModule',
            'defaultController' => 'default',
        ),
        'backend' => array(
            'class' => '\backend\BackendModule',
            'modules' => array(
                'clientManagement' => array(
                    'class' => '\clientManagement\ClientManagementModule',
                ),
            ),
        ),
        'control' => array(
        ),
        'stats' => array(
            'defaultController' => 'default',
        ),
        'sitemap' => array(
        ),
        'unplugged' => array(
            'class' => '\unplugged\UnpluggedModule',
        ),
        'report' => ['class' => '\report\ReportModule'],
        'rawdata' => ['class' => '\rawdata\RawDataModule'],
        'unify' => ['class' => '\unify\UnifyModule'],
        'api' => array(
            'class' => '\api\ApiModule',
        ),
        'portal' => ['class' => '\portal\PortalModule'],
        'rosetta' => ['class' => '\rosetta\RosettaModule'],
        'docs' => array(
            'class' => '\docs\DocsModule',
        ),
        'widgets' => array(
            'defaultController' => 'widget',
            'class' => '\widgets\WidgetsModule',
        ),
        'bigscreen' => array(
            'class' => '\bigscreen\BigscreenModule',
            'defaultController' => 'entity',
        ),
    ),
    // application components
    'components' => array(
        'appCache' => array(
            'class' => '\unplugged\components\AppCache',
        ),
        'autologin' => array(
            'class' => 'Autologin',
        ),
        'loid' => array(
            'class' => 'application.extensions.lightopenid.loid',
        ),
        'eauth' => array(
            'class' => 'ext.eauth.EAuth',
            'popup' => true, // Use the popup window instead of redirecting.
            'cache' => false, // Cache component name or false to disable cache. Defaults to 'cache'.
            'cacheExpire' => 1, // Cache lifetime. Defaults to 0 - means unlimited.
            'services' => array(// You can change the providers and their classes.
                'google' => array(
                    'class' => 'GoogleOpenIDService',
                    'title' => 'Google Account',
                // 'realm' => '*.iwantgreatcare.org',
                ),
//                'twitter' => array(
//                    // register your app here: https://dev.twitter.com/apps/new
//                    'class' => 'TwitterOAuthService',
//                    'key' => '...',
//                    'secret' => '...',
//                ),
//                'google_oauth' => array(
//                    // register your app here: https://code.google.com/apis/console/
//                    'class' => 'GoogleOAuthService',
//                    'client_id' => '...',
//                    'client_secret' => '...',
//                    'title' => 'Google (OAuth)',
//                ),
//                'facebook' => array(
//                    // register your app here: https://developers.facebook.com/apps/
//                    'class' => 'FacebookOAuthService',
//                    'client_id' => '...',
//                    'client_secret' => '...',
//                ),
//                'linkedin' => array(
//                    // register your app here: https://www.linkedin.com/secure/developer
//                    'class' => 'LinkedinOAuthService',
//                    'key' => '...',
//                    'secret' => '...',
//                ),
//                'github' => array(
//                    // register your app here: https://github.com/settings/applications
//                    'class' => 'GitHubOAuthService',
//                    'client_id' => '...',
//                    'client_secret' => '...',
//                ),
            ),
        ),
        'user' => array(
            // enable cookie-based authentication
            'allowAutoLogin' => true,
            'class' => 'WebUser',
            'loginUrl' => array('account/login'),
            'loginDuration' => 60 * 60 * 24,
            // used to initialize the identity cookie
            'identityCookie' => array(
                'path' => '/',
                //'secure' => ! YII_DEBUG,
                'httpOnly' => true,
            ),
        ),
        /*
          'session' => array(
          'class' => 'CDbHttpSession',
          'autoCreateSessionTable' => false,
          'autoStart' => true,
          'sessionName' => '_iwgc_session',
          'cookieMode' => 'only',
          'cookieParams' => array(
          //'secure' => ! YII_DEBUG,
          ),
          'connectionID' => 'db',
          'sessionTableName' => 'session',
          // the number of seconds after which data will be seen as 'garbage' and cleaned up, defaults to 1440 seconds
          'timeout' => 60 * 60 * 24,
          ),
         */
        'session' => array(
            'class' => 'CCacheHttpSession',
            'cacheID' => 'sessionCache',
            'autoStart' => true,
            'sessionName' => '_iwgc_session',
            'cookieMode' => 'only',
            'cookieParams' => array(
            //'secure' => ! YII_DEBUG,
            ),
            // the number of seconds after which data will be seen as 'garbage' and cleaned up, defaults to 1440 seconds
            'timeout' => 7200, // 2h
        ),
        'clientScript' => array(
            'class' => 'ClientScript',
            'packages' => array(
                'jquery' => array(
                    'baseUrl' => '//ajax.googleapis.com/ajax/libs/jquery/',
                    'js' => array('1.11.1/jquery.min.js'),
                ),
                'jquery2' => array(
                    'baseUrl' => '//ajax.googleapis.com/ajax/libs/jquery/',
                    'js' => array('2.1.1/jquery.min.js'),
                ),
                'jquery.ui' => array(
                    'baseUrl' => '//ajax.googleapis.com/ajax/libs/jqueryui/',
                    'js' => array('1.11.2/jquery-ui.min.js'),
                    'css' => array('1.11.2/themes/smoothness/jquery-ui.min.css'),
                    'depends' => array('jquery'),
                ),
                'jquery.cookie' => array(
                    'basePath' => 'webroot.js.vendor.jquery_cookie',
                    'js' => array('jquery.cookie.js'),
                    'depends' => array('jquery'),
                ),
                'qunit' => array(
                    'baseUrl' => '//code.jquery.com/qunit/',
                    'js' => array('qunit-1.15.0.js'),
                    'css' => array('qunit-1.15.0.css'),
                ),
                'underscore.js' => array(
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/underscore.js/',
                    'js' => array('1.7.0/underscore-min.js'),
                ),
                'backbone.js' => array(
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/backbone.js/',
                    'js' => array('1.1.2/backbone.js'),
                ),
                'tweenMax' => array(
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/gsap/',
                    'js' => array('1.11.7/TweenMax.min.js'),
                ),
                'scrollToPlugin' => [
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/gsap/',
                    'js' => ['1.14.1/plugins/ScrollToPlugin.min.js'],
                    'depends' => ['tweenMax'],
                ],
                'swankyselect' => array(
                    'basePath' => 'webroot.js.swankyselect',
                    'js' => array('swankyselect.js'),
                ),
                'jsonrpc' => array(
                    'basePath' => 'webroot.js.vendor.jsonrpc',
                    'js' => array('jquery.json-2.4.min.js', 'jquery.jsonrpcclient.js'),
                    'depends' => array('jquery2'),
                ),
                'jslog' => array(
                    'basePath' => 'webroot.js.JsLog',
                    'js' => array('JsLog.js'),
                    'depends' => array('jsonrpc'),
                ),
                'modernizr' => array(
                    'basePath' => 'webroot.js.vendor.modernizr',
                    'js' => array('modernizr.js'),
                ),
                'chosen' => array(
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/chosen/',
                    'js' => array('1.1.0/chosen.jquery.min.js'),
                    'css' => array('1.1.0/chosen.css'),
                ),
                'nprogress' => array(
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/nprogress/',
                    'js' => array('0.1.6/nprogress.min.js'),
                    'css' => array('0.1.6/nprogress.min.css'),
                ),
                'fontRoboto' => [
                    'baseUrl' => 'https://fonts.googleapis.com/',
                    'css' => ['css?family=Roboto:400,400italic,700,700italic&subset=latin,cyrillic-ext,greek-ext,greek,vietnamese,latin-ext,cyrillic'],
                ],
                'bootstrap' => [
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.1/',
                    'css' => ['css/bootstrap.min.css', 'css/bootstrap-theme.min.css'],
                    'js' => ['js/bootstrap.min.js'],
                ],
                'foundation' => [
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/foundation/5.5.2/',
                    'css' => ['css/normalize.min.css', 'css/foundation.min.css'],
                    'js' => ['js/foundation.min.js'],
                //'depends' => ['modernizr'],
                ],
                'pure' => [
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/pure/0.6.0/',
                    'css' => ['pure-min.css'],
                ],
                'd3' => [
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/d3/3.5.2/',
                    'js' => ['d3.min.js'],
                ],
                'nvd3' => [
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/nvd3/1.1.15-beta/',
                    'js' => ['nv.d3.min.js'],
                ],
                'magnific-popup' => [
                    'baseUrl' => '//cdnjs.cloudflare.com/ajax/libs/magnific-popup.js/0.9.9/',
                    'js' => ['jquery.magnific-popup.min.js'],
                    'css' => ['magnific-popup.css'],
                ],
                'angular' => array(
                    'basePath' => 'webroot.bower_components.angular',
                    'js' => array('angular.min.js')
                ),
                'angular-resource' => array(
                    'basePath' => 'webroot.bower_components.angular-resource',
                    'js' => array('angular-resource.min.js')
                ),
                'angular-bootstrapper' => [
                    'basePath' => 'webroot.js.angular',
                    'depends' => [
                        'angular'
                    ],
                    'js' => [
                        'config.js',
                        'app.js',
                        'routes.js'
                    ]
                ],
                'angular-registration' => [
                    'basePath' => 'webroot.js.angular.components',
                    'depends' => [
                        'angular-bootstrapper'
                    ],
                    'js' => [
                        'validators/PasswordValidator.js',
                        'validators/MatchValidator.js',
                        'utils/ApiUtil.js',
                        'directives/Submittable.js',
                        'registration/RegistrationController.js'
                    ],
                ],
                'simple-modal' => [
                    'basePath' => 'webroot.js.simple-modal',
                    'css' => ['simple-modal.css'],
                    'js' => ['simple-modal.js']
                ],
                'fontawesome' => [
                    'basePath' => 'webroot.bower_components.font-awesome',
                    'css' => ['css/font-awesome.min.css'],
                ],
            ),
        ),
        'widgetFactory' => array(
            'class' => 'CWidgetFactory',
            /**
             * Default configuration for widgets
             */
            'widgets' => array(
                'GoogleMapsWidget' => array(
                    'apiKey' => 'AIzaSyA8_5uurvDZ4NIVHuO-dTIZk6bIm_sOb9Y',
                ),
                'TwitterWidget' => array(
                    // live account
                    'consumerKey' => 'JvmCPwnZugR5ENLFEXRYTQ',
                    'consumerSecret' => 'sPFvuhOVVhTH8RiYEQNam54Lpw4ce2kLGU7aefuUF0',
                    'accessToken' => '218234758-0xtWoCNco7rsQdEkznHyd05tq1doOpyktJZDwAoe',
                    'accessTokenSecret' => 'i1BMLUJZlZJE0ZFIcTsUmYw04jjFyxi7BjcMAF3Hs',
                ),
            ),
        ),
        'request' => array(
            'class' => 'HttpRequest',
            // only turn on for developers and on staging, not on production
            //'enableCsrfValidation' => YII_DEBUG,
            // don't forget to update cookies info page when this goes live on production
            'csrfTokenName' => 'iwgc_csrf_token',
        ),
        'assetManager' => array(
            'class' => 'AssetManager',
            'hashBySize' => true,
            // the root directory storing the published asset files
            'basePath' => dirname(__FILE__) . '/../../assets/',
        ),
        'urlManager' => array(
            // Turn off rule cache because it makes no sense in Yii 1.1.16,
            // the cache is always re-generated?!
            // @see CUrlManager::processRules()
            'cacheID' => false,
            'urlFormat' => 'path',
            'class' => 'UrlManager',
            'showScriptName' => false,
            'rules' => array(
                ['class' => 'ShortUrlRule'], // handle short urls like hey.iwgc.net
                ['class' => 'PrimaryDomainUrlRule'], // redirect to primary domain name for all other domains
                array('class' => 'PatientStoriesUrlRule'),
                /**
                 * Custom url rules
                 */
                'external/<action:\w+>' => 'external/<action>',
                // api module
                array('class' => 'ApiUrlRule'),
                array('class' => 'PaginatorQuickfix'),
                // Registration of prospect users
                'registration/<action>' => 'prospect/<action>',
                // account controller
                'account/<action>' => 'account/<action>',
                /**
                 * Admin routes
                 */
                // rules for admin module, enabling will remove ruby admin fallback?
                'admin' => 'admin/default',
                /**
                 * Commented out Url rules with regex to strip out and non alphanumeric chars
                 * to stop hyphenated Url's from breaking
                 *
                 * 'admin/<controller:\w+>' => 'admin/<controller>',
                 * 'admin/<controller:\w+>/<action:\w+>' => 'admin/<controller>/<action>',
                 * 'admin/<controller:\w+>/<action:\w+>/<id>' => 'admin/<controller>/<action>',
                 */
                'admin/<controller>' => 'admin/<controller>',
                'admin/<controller>/<action>' => 'admin/<controller>/<action>',
                'admin/<controller>/<action>/<id>' => 'admin/<controller>/<action>',
                /**
                 * preview entities
                 */
                'admin/linkEntity/getEntity/<type>/<num>' => array('admin/LinkEntity/GetEntity', 'caseSensitive' => false),
                /**
                 * Unplugged module - offline app
                 */
                'unplugged/app/home/<entityId>' => 'unplugged/app/home', // entity app
                'unplugged/image/review/<uuid>' => 'unplugged/image/review',
                'unplugged/<controller:\w+>/<action:\w+>' => 'unplugged/<controller>/<action>',
                'unplugged/<controller:\w+>' => 'unplugged/<controller>',
                '<filename>.appcache' => 'unplugged/appCache/index',
                // report module
                'report/<controller:\w+>' => 'report/<controller>',
                'report/<controller:\w+>/<action:\w+>' => 'report/<controller>/<action>',
                // rawdata module
                'rawdata/<controller:\w+>' => 'rawdata/<controller>',
                'rawdata/<controller:\w+>/<action:\w+>' => 'rawdata/<controller>/<action>',
                // unify module
                'unify/<controller:\w+>' => 'unify/<controller>',
                'unify/<controller:\w+>/<action:\w+>' => 'unify/<controller>/<action>',
                /**
                 * Client module
                 */
                'clientManagement/<controller:\w+>/<action:\w+>' => 'backend/clientManagement/<controller>/<action>',
                'clientManagement/<controller:\w+>' => 'backend/clientManagement/<controller>',
                /**
                 * Docs module
                 */
                'docs/<controller>' => 'docs/<controller>',
                'docs/<controller>/<action>' => 'docs/<controller>/<action>',
                /**
                 * Widescreen module
                 */
                'bigscreen/app/<hash>' => 'bigscreen/app/index',
                'bigscreen/<controller:\w+>' => 'bigscreen/<controller>',
                'bigscreen/<controller:\w+>/<action:\w+>' => 'bigscreen/<controller>/<action>',
                
                /**
                 * Portal Module activated for Cumbria only
                 */
                'portal/<url>' => 'portal', // landing page support for ccg model
                'cumbria' => 'portal',
                'cumbria/index/<action>' => 'portal/index/<action>',
                'cumbria/<type>/<url>' => 'portal/entity/view',
                'cumbria/<controller:\w+>/<action:\w+>' => 'portal/<controller>/<action>',
                'cumbria/<controller:\w+>' => 'portal/<controller>',
                'cumbria/<type:[\w\-]+>/<id:[^\/]+>/reviews/<action:\w+>' => 'portal/review/<action>',
                'cumbria/<type:[\w\-]+>/<id:[^\/]+>/reviews/<action:\w+>/<questionSetId:\d+>' => 'portal/review/<action>',
                'cumbria/<type:\w+>/<id:[^\/]+>/reviews/<uuid>/<action:(report|like)>' => 'portal/review/<action>',

                /**
                 * Widget Module
                 */
                'widget/<action>/<hashId>' => '/widgets/widget/<action>',
                'widget/<action>' => '/widgets/widget/<action>',
                /**
                 * Sitemap
                 */
                'sitemap_<sitemap:\w+>.xml' => array('sitemap/sitemap/index', 'caseSensitive' => true),
                'robots.txt' => 'sitemap/robotsTxt/robotsTxt',
                'dialog/<action>' => array('/dialog/<action>'),
                // Download controller
                'download/<id:[\w\-]+>' => 'download/index',
                // Campaigns controller
                '/mps' => 'campaigns/mps',
                'campaigns/<action:\w+>' => 'campaigns/<action>',
                //external widget rule
                'w/all' => 'reviewwidget/all',
                'widget/paw' => 'reviewwidget/paw',
                // deprecate old widget urls, route everything through new code
                //'w/<entityId>' => 'reviewwidget/index',
                'w/<url>' => 'reviewwidget/widget',
                'wtrust/<url>' => 'reviewwidget/trust',
                //end external widget rule
                'control/<controller:\w+>' => 'control/<controller>',
                'control/<controller:\w+>/<action:\w+>' => 'control/<controller>/<action>',
                'stats/<controller:\w+>' => 'stats/<controller>',
                'stats/<controller:\w+>/<action:\w+>' => 'stats/<controller>/<action>',
                '<type:\w+>/<id:[^\/]+>/reviews/<uuid>/<action:(report|like)>' => 'review/<action>',
                // entity business card
                '<type:\w+>/<id:[^\/]+>.pdf' => 'passthrough/businessCard',
                'information/<action:[\w\-]+>' => 'information/<action>',
                'search/<action:[\w\-]+>' => 'search/<action>',
                'confirm/<id:[\w\-]+>' => 'confirm/index/id:',
                // generic rules for staff surveys
                'staff-survey/<trust:[\w\-]+>' => 'staff-survey/index',
                // Unilabs custom controller
                'organisations/unilabsstaff/<action>' => 'unilabsstaff/<action>',
                'organisations/unilabs/<action>' => 'unilabs/<action>',
                'organisations/unilabsclinician/<action>' => 'unilabsclinician/<action>',

                //boots
                'boots/<action>' => 'boots/<action>',

                // make diaverum urls pretty
                'organisations/diaverum/<page>' => array('organisations/diaverum<page>', 'caseSensitive' => false),
                'diaverum/<clinic>/<page>' => array('organisations/diaverum<page>', 'caseSensitive' => false),
                // Pretty boots URLs
                'organisations/boots/<locationId>' => 'organisations/boots',
                // generic rule for organisations
                'organisations/<action:[\w\-]+>' => 'organisations/<action>',
                'home/<action:[\w\-]+>' => 'home/<action>',
                'dynselect/<action:[\w\-]+>' => 'dynselect/<action>',
                'subscriptions/<action:[\w\-]+>' => 'subscriptions/<action>',
                '<type:[\w\-]+>/<id:[\w\-]+>/reviews/<action:\w+>/<questionSetId:\d+>' => 'review/<action>',
                // --------------------
                // show single review on a page, compatibility with numeric review ids
                '<type:[\w\-]+>/<id:[^\/]+>/reviews/<reviewId:\d+>' => 'review/show',
                // review controller
                '<type:[\w\-]+>/<id:[^\/]+>/reviews/<action:\w+>' => 'review/<action>',
                // show single review on a page
                '<type:\w+>/<id>/reviews/<reviewId>' => 'review/show',
                // --------------------
                '<type:[\w\-]+>/<id:[^\/]+>/respond/<reply_to:\d+>' => 'review/reply',
                '<type:[\w\-]+>/<id:[^\/]+>/respond/confirm' => 'review/replyConfirm',
                'reviews/new/<type:[\w\-]+>' => 'entity/new',
                'reviews/select' => 'search/select',
                'reviews/select/preview' => 'review/preview',
                'reviews/search' => 'review/search',
                // generic site urls, see constants in UrlManager
                '/login' => '/admin/auth/login',
                '/logout' => '/admin/auth/logout',
                '/register' => '/admin/auth/login',
                // help users determine which browser they're using
                'browser' => 'browserInfo/index',
                // rss/atom feeds from ruby site
                '<controller:\w+>/<id:[^\/]+>.<type:atom|rss>' => 'passthrough/syndication',
                '<controller:\w+>/new' => '<controller>/new',
                '<controller:\w+>/<id:[^\/]+>' => '<controller>/view',
                '<controller:\w+>/<id:[^\/]+>/subscribe' => '<controller>/subscribe',
                // entity image
                '<type:\w+>/<id:[^\/]+>/image' => 'entity/image',
                '<type:\w+>/<id:[^\/]+>/image/<width:\d+>/<height:\d+>' => 'entity/image',
                '<controller:\w+>/<id:[^\/]+>/<action:\w+>' => '<controller>/<action>',
                '<controller:\w+>/<action:\w+>' => '<controller>/<action>',
                '/e<eid:\w+>' => 'shorturl/redirect', // This is temporary to demonstrate shortURL redirecting
            ),
        ),
        'cacheDuration' => array(
            'class' => 'CacheDuration',
            'active' => true,
            /**
             * If key is a method name - cache is for method return
             */
            'durations' => array(
                // set to negative to disable cache
                'default' => 600,
                'homeTwitter' => 600,
                'homeLatestReviews' => 600,
                'entityLatestReviews' => 600,
                'entityNearestEntities' => 600,
                'EntityChildrenWidget' => 600,
                'bulkUpload' => 3600,
                // cache some relations, to avoid redundant database calls during single request
                'relationCache' => 10,
                // translation models, keep short until there is a method to invalidate cache
                // increased from 10 to 300
                'translation' => 300,
                'wardType' => 300,
                'Diaverum::getEntitiesPerCountry' => 600,
                'OrganisationsController::actionAjaxDiaverum' => 300,
                'PartnerCarouselWidget' => 600,
                'UnpluggedMethods' => 3600,
                'officeIp' => 3600,
                'RubyYaml' => 1209600, // 14 days, RubyYaml::getCacheKey() will handle cache invalidation
                'appCacheManifest' => 300,
                'SearchWidget::getEntityCount' => 600,
                'EntityTrustInfoWidget' => 3600, // Cache for 1 hour
                'PatientAssociationWidget::getReviews' => 300,
                'ExternalReviewWidget::getReviews' => 900,
                // Doctor widget heavy methods
                'DoctorSignUpsWidget::doctorsBySpecialty' => 300,
                'DoctorSignUpsWidget::reviewsBySpecialty' => 300,
                // navigation widget in admin module
                'WebUser::getAccessControl' => 60, // do not set higher than 60
                'ReviewModerationWidget' => 60, // do not set higher than 60
                'Review::getNumericResponses' => 120,
            ),
        ),
        'imageFileCache' => array(
            'class' => 'ImageFileCache',
            'type' => 'image_cache',
            'active' => true,
        ),
        'domain' => array(
            'class' => 'Domain',
            // change Domain::DOMAIN_DEFAULT if you update this
            'domain' => 'www.iwantgreatcare.org',
        ),
        'apiClientFactory' => [
            'class' => 'ApiClientFactory',
            'apiKey' => '7d1d56f0aa29efd0fb67',
            'sharedSecret' => '1a2a351f44bb3ebd0beef8480acaeebebaccff7c',
            'endpoint' => null, // must be defined in environment config
            'port' => null, // must be defined in environment config
        ],
        'errorHandler' => array(
            // use 'site/error' action to display errors
            'errorAction' => 'error/index',
            'class' => 'ErrorHandler',
        ),
        'log' => array(
            'class' => 'CLogRouter',
            'routes' => array(
                'CFileLogRoute' => array(
                    'class' => 'CFileLogRoute',
                    'levels' => 'info,profile,warning,error',
                    'except' => 'exception.CHttpException.404',
                    'filter' => 'CLogFilter',
                    'maxFileSize' => 1024,
                    'maxLogFiles' => 30,
                    'logFile' => 'application.log',
                ),
                // debug log
                array(
                    'class' => 'CFileLogRoute',
                    'levels' => 'trace, info',
                    'categories' => 'application',
                    'maxFileSize' => 10240,
                    'maxLogFiles' => 1,
                    'logFile' => 'trace.log',
                ),
                // js log
                array(
                    'class' => 'CFileLogRoute',
                    'levels' => 'trace, info',
                    'categories' => 'jslog',
                    'maxFileSize' => 10240,
                    'maxLogFiles' => 1,
                    'logFile' => 'jslog.log',
                ),
                // error log
                array(
                    'class' => 'CFileLogRoute',
                    'levels' => 'error',
                    'maxFileSize' => 10240,
                    'maxLogFiles' => 10,
                    'logFile' => 'error.log',
                ),
            ),
        ),
        'messages' => array(
            'class' => 'PhpMessageSource',
            // no cache
            'cacheID' => null,
            'forceTranslation' => true,
            'showMissingTranslation' => false,
        ),
        'unifyFileSystem' => [
            'class' => '\unify\components\UnifyFileSystem',
            'type' => 'Local',
            'config' => [
                'root' => dirname(__FILE__) . '/../modules/unify',
            ],
        ],
    ),
    /**
     * Events
     * If you need to attach more than one event handler this will have to be moved to index.php
     */
    'onBeginRequest' => array('Language', 'onBeginRequestHandler'),
    // application-level parameters that can be accessed
    // using Yii::app()->params['paramName']
    'params' => array(
        'usePrimaryDomainUrlRule' => false,
        'sendTestEmail' => false,
        // emails
        'emails' => array(
            'support' => 'support@iwantgreatcare.org',
        ),
        'rubyDomain' => 'https://old.iwantgreatcare.org',
        // should use Yii::app()->urlManager->getDomainName()
        'staticDomain' => 'https://www.iwantgreatcare.org',
        'showCharity' => true,
        // @todo remove when ApplicationEmail is removed?
        'ApplicationEmail' => array(
            'mandrillkey' => '3IWvCZBVFDnJ_fXUuoNkFg',
            'from_email' => 'website@iwantgreatcare.org',
            'from_name' => 'iWantGreatCare',
            'reply_to' => 'website@iwantgreatcare.org',
        ),
        'EmailProvider' => array(
            'provider' => 'Mandrill',
            // Disabled for now
            // 'Amazon' => array(
            //     'key' => 'AKIAIIYHWY2YPSUZRYSA',
            //     'secret' => '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',
            //     'region' => 'eu-west-1'
            // ),
            'Mandrill' => array(
                'key' => '3IWvCZBVFDnJ_fXUuoNkFg'
            )
        ),
        'Moderation' => array(
            // true means everything goes into moderation, false - run moderation logic
            'moderateAll' => false,
            'moderationThreshold' => -30
        ),
        'siteEmails' => array(
            'charities' => 'charities@iwantgreatcare.org',
            'dataManager' => 'data.manager@iwantgreatcare.org',
            'support' => 'support@iwantgreatcare.org',
            'clients' => 'clients@iwantgreatcare.org',
        ),
        'zendesk' => array(
            'url' => 'https://iwantgreatcare.zendesk.com',
            'email_help' => '/forums/20714233-Emails'
        ),
        'salts' => array(
            'UID' => '4asdirkmjgbuj^%YeD7*75s',
            'freetext' => 'da39a3ee5e6b4b0d3255bfef95601890afd80709',
            'emailalerts' => 'NFf3IOWcHU8yuo313QRqP63rXmUUvFtBNfAnCl'
        ),
        'overrideEmail' => false,
        // Twilio api tokens
        'twilio' => array(
            'AccountSid' => 'AC52a87e084d464bb5ab74521b4c7c5f23',
            'AuthToken' => '995ec685246b74a76b8f543d333685a2',
            'from' => '+44 20 3322 1252'
        ),
        'stripe' => array(
            'publishableKey' => 'pk_test_4SUFTFYScQa0kbnYQdyi6yIU',
            'secretKey' => 'sk_test_5AprAP64AhvYlygaxLjpGSXD',
        ),
        // key required to access warmup controller
        'warmupKey' => 'C8BDB0B2DF76655C0311932F09FE3ADF8D0798A2C339C2273003BACEDE93BB54',
        'adminAccountUrl' => '/admin/',
        'adminLogoutUrl' => '/admin/auth/logout/',
        /**
         * Google Analytics code
         */
        'googleAnalyticsCode' => 'UA-4685196-1',
        /**
         *  PiWik Analytics domain
         */
        'piwikTrackingOn' => true,
        'piwikEngineDomain' => 'https://tracker.iwantgreatcare.org',
        'piwikSiteId' => 1,
        /**
         * Flysystem config
         */
        'filesystems' => [
            // Local filesystem
            'Local' => [
                'adapter' => 'Local',
                'root' => '/tmp/downloadTests'
            ],
            // Private key secured Sftp (privateKey must be readable by apache user)
            /* 'Sftp' => [
              'adapter' => 'Sftp',
              'host' => '',
              'username' => '',
              'privateKey' => '',
              'root' => ''
              ], */
            // S3 storage (Credentials should allow writing for full usage)
            'AwsS3' => [
                'adapter' => 'AwsS3',
                'bucketName' => 'iwgc-website',
                'key' => '<%=@accessKey%>',
                'secret' => '<%=@accessSecret%>',
                'prefix' => '',
                'scanningKey' => '',
                'scanningSecret'=> '',
            ],

        // Local zip file
        /* 'Zip' => [
          'adapter' => 'Zip',
          'location' => ''
          ] */
        ]
    )
);
